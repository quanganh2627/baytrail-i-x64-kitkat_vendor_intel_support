#!/bin/bash
# build nand boot recovery image for android

TEMP=`getopt \
         -o c:r:k:o:p:t:s: \
         --long cmdline:,ramdisk:,kernel:,output:,product:,type:,sign-with: \
         -n '$0' \
         --  "$@"`

eval set -- "$TEMP"
while true ; do
    echo "+++++ case $1 +++++"
    case "$1" in
        --cmdline) CMDLINE="$2"; shift 2;;
        --ramdisk) INITRD=$2; shift 2;;
        --kernel) BZIMAGE=$2; shift 2;;
        --output) OUT=$2; shift 2;;
        --product) BOARD=$2; shift 2;;
        --sign-with) SIGN_WITH=${2,,}; shift 2;;
        --type) TYPE=$2; shift 2;;
        --) shift ; break ;;
    esac
done

TARG=`dirname $OUT`
case "$TYPE" in
    mos) IMGNAME="boot";;
    recovery) IMGNAME="recovery";;
    combined) IMGNAME="recovery";;
    fastboot) IMGNAME="fastboot";;
    droidboot) IMGNAME="droidboot";;
esac
if [ -z "$IMGNAME" ]; then
    echo "Error: image type shall be one of: mos,recovery,combined,fastboot,droidboot"
    exit 1
fi
if [ -z "$SIGN_WITH" ]; then
    SIGN_WITH="none"
fi

UNSIGNED_OUT=${TARG}/${IMGNAME}.unsigned
CMDLINE_FILE=${TARG}/${IMGNAME}_cmdline
echo $CMDLINE > $CMDLINE_FILE
BOOTSTUB=vendor/intel/support/bootstub
PLT_TYPE=MFDC0

if [[   "$BOARD" == "mfld_pr2" \
     || "$BOARD" == "mfld_gi" \
     || "$BOARD" == "salitpa" \
     || "$BOARD" == "yukkabeach" \
     || "$BOARD" == "victoriabay" \
     || "$BOARD" == "ctp_pr1" \
     || "$BOARD" == "mrfl_vp" \
     || "$BOARD" == "mrfl_hvp" \
     || "$BOARD" == "mrfl_sle" \
     || "$BOARD" == "merr_vv" \
   ]]; then
            SILICON=1;
    else
            SILICON=0;
    fi

if [[   "$BOARD" == "mrfl_vp" \
     || "$BOARD" == "mrfl_hvp" \
     || "$BOARD" == "mrfl_sle" \
     || "$BOARD" == "merr_vv"
   ]]; then
            SPI_FLAG=1;
            BOOTSTUB=${BOOTSTUB}_mrfl
            PLT_TYPE=MRFLDA0
    else
            SPI_FLAG=0;
    fi

if [ ! -e ${BZIMAGE} ]; then
    echo "error: bzImage file ${BZIMAGE} does not exist"
    exit 1
fi

if [ ! -e "${INITRD}" ]; then
    echo "error: ramdisk.img file ${INTRD} does not exist"
    exit 1
fi

if [ ! -e "${CMDLINE_FILE}" ]; then
    echo "error: cmdline file ${CMDLINE} does not exist"
    exit 1
fi

if [ ! -e ${BOOTSTUB} ]; then
    echo "error: bootstub file ${BOOTSTUB} does not exist"
    exit 1
fi

if [ -e "${OUT}" ]; then
    echo "${OUT} exists, remove the old one"
    rm -f ${OUT}
fi

echo "Creating image \`${OUT}'for FSTK stitching..."

rm -f ${UNSIGNED_OUT}
./vendor/intel/support/stitch.sh ${CMDLINE_FILE} ${BOOTSTUB} ${BZIMAGE} ${INITRD} ${SPI_FLAG} ${SILICON} ${UNSIGNED_OUT}

if [ "0" -ne "$?" ]; then
    echo "error running stitch.sh for generating ${UNSIGNED_OUT}"
    exit 1
fi
TOP=`pwd`
# stitch binary

UPPER_TYPE=${TYPE^^}
TMPFILE=`mktemp /tmp/gen-os.tmp.XXX`

GEN_OS=vendor/intel/support/gen_os
GEN_OS_CMD="./$GEN_OS --input ${TOP}/${UNSIGNED_OUT} --output ${TOP}/${OUT} --xml ${UPPER_TYPE}_OTA.XML --platform-type $PLT_TYPE --sign-with $SIGN_WITH"
$GEN_OS_CMD 2>${TMPFILE}
if [ $? -ne 0 ]; then
	echo -e "$GEN_OS_CMD: error\n$(cat ${TMPFILE})" >&2
	rm -f ${TMPFILE}
	exit 1
fi
rm -f ${TMPFILE}

case "$TYPE" in
    combined|fastboot|droidboot)
        # Only generate POS version for these image types.
        GEN_OS_CMD="./$GEN_OS --input ${TOP}/${UNSIGNED_OUT} --output ${TOP}/${OUT}.POS.bin --xml ${UPPER_TYPE}.XML --platform-type $PLT_TYPE --sign-with $SIGN_WITH"
        $GEN_OS_CMD 2>$TMPFILE
			if [ $? -ne 0 ]; then
				echo -e  "$GEN_OS_CMD: error\n$(cat $TMPFILE)" >&2
				rm -f ${TMPFILE}
				exit 1
			fi
			rm -f ${TMPFILE}
            ;;
esac

# clean up
cd  $TOP
echo "Done."
